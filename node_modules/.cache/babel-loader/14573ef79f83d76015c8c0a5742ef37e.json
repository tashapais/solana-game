{"ast":null,"code":"(function (global) {\n  'use strict';\n\n  var util = newUtil();\n  var inliner = newInliner();\n  var fontFaces = newFontFaces();\n  var images = newImages(); // Default impl options\n\n  var defaultOptions = {\n    // Default is to fail on error, no placeholder\n    imagePlaceholder: undefined,\n    // Default cache bust is false, it will use the cache\n    cacheBust: false\n  };\n  var domtoimage = {\n    toSvg: toSvg,\n    toPng: toPng,\n    toJpeg: toJpeg,\n    toBlob: toBlob,\n    toPixelData: toPixelData,\n    impl: {\n      fontFaces: fontFaces,\n      images: images,\n      util: util,\n      inliner: inliner,\n      options: {}\n    }\n  };\n  if (typeof module !== 'undefined') module.exports = domtoimage;else global.domtoimage = domtoimage;\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options\n   * @param {Function} options.filter - Should return true if passed node should be included in the output\n   *          (excluding node means excluding it's children as well). Not called on the root node.\n   * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n   * @param {Number} options.width - width to be applied to node before rendering.\n   * @param {Number} options.height - height to be applied to node before rendering.\n   * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n   * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n              defaults to 1.0.\n   * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n   * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n   * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n   * */\n\n  function toSvg(node, options) {\n    options = options || {};\n    copyOptions(options);\n    return Promise.resolve(node).then(function (node) {\n      return cloneNode(node, options.filter, true);\n    }).then(embedFonts).then(inlineImages).then(applyOptions).then(function (clone) {\n      return makeSvgDataUri(clone, options.width || util.width(node), options.height || util.height(node));\n    });\n\n    function applyOptions(clone) {\n      if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n      if (options.width) clone.style.width = options.width + 'px';\n      if (options.height) clone.style.height = options.height + 'px';\n      if (options.style) Object.keys(options.style).forEach(function (property) {\n        clone.style[property] = options.style[property];\n      });\n      return clone;\n    }\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n   * */\n\n\n  function toPixelData(node, options) {\n    return draw(node, options || {}).then(function (canvas) {\n      return canvas.getContext('2d').getImageData(0, 0, util.width(node), util.height(node)).data;\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n   * */\n\n\n  function toPng(node, options) {\n    return draw(node, options || {}).then(function (canvas) {\n      return canvas.toDataURL();\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n   * */\n\n\n  function toJpeg(node, options) {\n    options = options || {};\n    return draw(node, options).then(function (canvas) {\n      return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image blob\n   * */\n\n\n  function toBlob(node, options) {\n    return draw(node, options || {}).then(util.canvasToBlob);\n  }\n\n  function copyOptions(options) {\n    // Copy options to impl options for use in impl\n    if (typeof options.imagePlaceholder === 'undefined') {\n      domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n    } else {\n      domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n    }\n\n    if (typeof options.cacheBust === 'undefined') {\n      domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n    } else {\n      domtoimage.impl.options.cacheBust = options.cacheBust;\n    }\n  }\n\n  function draw(domNode, options) {\n    return toSvg(domNode, options).then(util.makeImage).then(util.delay(100)).then(function (image) {\n      var canvas = newCanvas(domNode);\n      canvas.getContext('2d').drawImage(image, 0, 0);\n      return canvas;\n    });\n\n    function newCanvas(domNode) {\n      var canvas = document.createElement('canvas');\n      canvas.width = options.width || util.width(domNode);\n      canvas.height = options.height || util.height(domNode);\n\n      if (options.bgcolor) {\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = options.bgcolor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n\n      return canvas;\n    }\n  }\n\n  function cloneNode(node, filter, root) {\n    if (!root && filter && !filter(node)) return Promise.resolve();\n    return Promise.resolve(node).then(makeNodeCopy).then(function (clone) {\n      return cloneChildren(node, clone, filter);\n    }).then(function (clone) {\n      return processClone(node, clone);\n    });\n\n    function makeNodeCopy(node) {\n      if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n      return node.cloneNode(false);\n    }\n\n    function cloneChildren(original, clone, filter) {\n      var children = original.childNodes;\n      if (children.length === 0) return Promise.resolve(clone);\n      return cloneChildrenInOrder(clone, util.asArray(children), filter).then(function () {\n        return clone;\n      });\n\n      function cloneChildrenInOrder(parent, children, filter) {\n        var done = Promise.resolve();\n        children.forEach(function (child) {\n          done = done.then(function () {\n            return cloneNode(child, filter);\n          }).then(function (childClone) {\n            if (childClone) parent.appendChild(childClone);\n          });\n        });\n        return done;\n      }\n    }\n\n    function processClone(original, clone) {\n      if (!(clone instanceof Element)) return clone;\n      return Promise.resolve().then(cloneStyle).then(clonePseudoElements).then(copyUserInput).then(fixSvg).then(function () {\n        return clone;\n      });\n\n      function cloneStyle() {\n        copyStyle(window.getComputedStyle(original), clone.style);\n\n        function copyStyle(source, target) {\n          if (source.cssText) target.cssText = source.cssText;else copyProperties(source, target);\n\n          function copyProperties(source, target) {\n            util.asArray(source).forEach(function (name) {\n              target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n            });\n          }\n        }\n      }\n\n      function clonePseudoElements() {\n        [':before', ':after'].forEach(function (element) {\n          clonePseudoElement(element);\n        });\n\n        function clonePseudoElement(element) {\n          var style = window.getComputedStyle(original, element);\n          var content = style.getPropertyValue('content');\n          if (content === '' || content === 'none') return;\n          var className = util.uid();\n          clone.className = clone.className + ' ' + className;\n          var styleElement = document.createElement('style');\n          styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n          clone.appendChild(styleElement);\n\n          function formatPseudoElementStyle(className, element, style) {\n            var selector = '.' + className + ':' + element;\n            var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n            return document.createTextNode(selector + '{' + cssText + '}');\n\n            function formatCssText(style) {\n              var content = style.getPropertyValue('content');\n              return style.cssText + ' content: ' + content + ';';\n            }\n\n            function formatCssProperties(style) {\n              return util.asArray(style).map(formatProperty).join('; ') + ';';\n\n              function formatProperty(name) {\n                return name + ': ' + style.getPropertyValue(name) + (style.getPropertyPriority(name) ? ' !important' : '');\n              }\n            }\n          }\n        }\n      }\n\n      function copyUserInput() {\n        if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n        if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n      }\n\n      function fixSvg() {\n        if (!(clone instanceof SVGElement)) return;\n        clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        if (!(clone instanceof SVGRectElement)) return;\n        ['width', 'height'].forEach(function (attribute) {\n          var value = clone.getAttribute(attribute);\n          if (!value) return;\n          clone.style.setProperty(attribute, value);\n        });\n      }\n    }\n  }\n\n  function embedFonts(node) {\n    return fontFaces.resolveAll().then(function (cssText) {\n      var styleNode = document.createElement('style');\n      node.appendChild(styleNode);\n      styleNode.appendChild(document.createTextNode(cssText));\n      return node;\n    });\n  }\n\n  function inlineImages(node) {\n    return images.inlineAll(node).then(function () {\n      return node;\n    });\n  }\n\n  function makeSvgDataUri(node, width, height) {\n    return Promise.resolve(node).then(function (node) {\n      node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n      return new XMLSerializer().serializeToString(node);\n    }).then(util.escapeXhtml).then(function (xhtml) {\n      return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n    }).then(function (foreignObject) {\n      return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' + foreignObject + '</svg>';\n    }).then(function (svg) {\n      return 'data:image/svg+xml;charset=utf-8,' + svg;\n    });\n  }\n\n  function newUtil() {\n    return {\n      escape: escape,\n      parseExtension: parseExtension,\n      mimeType: mimeType,\n      dataAsUrl: dataAsUrl,\n      isDataUrl: isDataUrl,\n      canvasToBlob: canvasToBlob,\n      resolveUrl: resolveUrl,\n      getAndEncode: getAndEncode,\n      uid: uid(),\n      delay: delay,\n      asArray: asArray,\n      escapeXhtml: escapeXhtml,\n      makeImage: makeImage,\n      width: width,\n      height: height\n    };\n\n    function mimes() {\n      /*\n       * Only WOFF and EOT mime types for fonts are 'real'\n       * see http://www.iana.org/assignments/media-types/media-types.xhtml\n       */\n      var WOFF = 'application/font-woff';\n      var JPEG = 'image/jpeg';\n      return {\n        'woff': WOFF,\n        'woff2': WOFF,\n        'ttf': 'application/font-truetype',\n        'eot': 'application/vnd.ms-fontobject',\n        'png': 'image/png',\n        'jpg': JPEG,\n        'jpeg': JPEG,\n        'gif': 'image/gif',\n        'tiff': 'image/tiff',\n        'svg': 'image/svg+xml'\n      };\n    }\n\n    function parseExtension(url) {\n      var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n      if (match) return match[1];else return '';\n    }\n\n    function mimeType(url) {\n      var extension = parseExtension(url).toLowerCase();\n      return mimes()[extension] || '';\n    }\n\n    function isDataUrl(url) {\n      return url.search(/^(data:)/) !== -1;\n    }\n\n    function toBlob(canvas) {\n      return new Promise(function (resolve) {\n        var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        var length = binaryString.length;\n        var binaryArray = new Uint8Array(length);\n\n        for (var i = 0; i < length; i++) binaryArray[i] = binaryString.charCodeAt(i);\n\n        resolve(new Blob([binaryArray], {\n          type: 'image/png'\n        }));\n      });\n    }\n\n    function canvasToBlob(canvas) {\n      if (canvas.toBlob) return new Promise(function (resolve) {\n        canvas.toBlob(resolve);\n      });\n      return toBlob(canvas);\n    }\n\n    function resolveUrl(url, baseUrl) {\n      var doc = document.implementation.createHTMLDocument();\n      var base = doc.createElement('base');\n      doc.head.appendChild(base);\n      var a = doc.createElement('a');\n      doc.body.appendChild(a);\n      base.href = baseUrl;\n      a.href = url;\n      return a.href;\n    }\n\n    function uid() {\n      var index = 0;\n      return function () {\n        return 'u' + fourRandomChars() + index++;\n\n        function fourRandomChars() {\n          /* see http://stackoverflow.com/a/6248722/2519373 */\n          return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n        }\n      };\n    }\n\n    function makeImage(uri) {\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n\n        image.onload = function () {\n          resolve(image);\n        };\n\n        image.onerror = reject;\n        image.src = uri;\n      });\n    }\n\n    function getAndEncode(url) {\n      var TIMEOUT = 30000;\n\n      if (domtoimage.impl.options.cacheBust) {\n        // Cache bypass so we dont have CORS issues with cached images\n        // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n        url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n      }\n\n      return new Promise(function (resolve) {\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = done;\n        request.ontimeout = timeout;\n        request.responseType = 'blob';\n        request.timeout = TIMEOUT;\n        request.open('GET', url, true);\n        request.send();\n        var placeholder;\n\n        if (domtoimage.impl.options.imagePlaceholder) {\n          var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n\n          if (split && split[1]) {\n            placeholder = split[1];\n          }\n        }\n\n        function done() {\n          if (request.readyState !== 4) return;\n\n          if (request.status !== 200) {\n            if (placeholder) {\n              resolve(placeholder);\n            } else {\n              fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n            }\n\n            return;\n          }\n\n          var encoder = new FileReader();\n\n          encoder.onloadend = function () {\n            var content = encoder.result.split(/,/)[1];\n            resolve(content);\n          };\n\n          encoder.readAsDataURL(request.response);\n        }\n\n        function timeout() {\n          if (placeholder) {\n            resolve(placeholder);\n          } else {\n            fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n          }\n        }\n\n        function fail(message) {\n          console.error(message);\n          resolve('');\n        }\n      });\n    }\n\n    function dataAsUrl(content, type) {\n      return 'data:' + type + ';base64,' + content;\n    }\n\n    function escape(string) {\n      return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    }\n\n    function delay(ms) {\n      return function (arg) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve(arg);\n          }, ms);\n        });\n      };\n    }\n\n    function asArray(arrayLike) {\n      var array = [];\n      var length = arrayLike.length;\n\n      for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n\n      return array;\n    }\n\n    function escapeXhtml(string) {\n      return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n    }\n\n    function width(node) {\n      var leftBorder = px(node, 'border-left-width');\n      var rightBorder = px(node, 'border-right-width');\n      return node.scrollWidth + leftBorder + rightBorder;\n    }\n\n    function height(node) {\n      var topBorder = px(node, 'border-top-width');\n      var bottomBorder = px(node, 'border-bottom-width');\n      return node.scrollHeight + topBorder + bottomBorder;\n    }\n\n    function px(node, styleProperty) {\n      var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n      return parseFloat(value.replace('px', ''));\n    }\n  }\n\n  function newInliner() {\n    var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n    return {\n      inlineAll: inlineAll,\n      shouldProcess: shouldProcess,\n      impl: {\n        readUrls: readUrls,\n        inline: inline\n      }\n    };\n\n    function shouldProcess(string) {\n      return string.search(URL_REGEX) !== -1;\n    }\n\n    function readUrls(string) {\n      var result = [];\n      var match;\n\n      while ((match = URL_REGEX.exec(string)) !== null) {\n        result.push(match[1]);\n      }\n\n      return result.filter(function (url) {\n        return !util.isDataUrl(url);\n      });\n    }\n\n    function inline(string, url, baseUrl, get) {\n      return Promise.resolve(url).then(function (url) {\n        return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n      }).then(get || util.getAndEncode).then(function (data) {\n        return util.dataAsUrl(data, util.mimeType(url));\n      }).then(function (dataUrl) {\n        return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n      });\n\n      function urlAsRegex(url) {\n        return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n      }\n    }\n\n    function inlineAll(string, baseUrl, get) {\n      if (nothingToInline()) return Promise.resolve(string);\n      return Promise.resolve(string).then(readUrls).then(function (urls) {\n        var done = Promise.resolve(string);\n        urls.forEach(function (url) {\n          done = done.then(function (string) {\n            return inline(string, url, baseUrl, get);\n          });\n        });\n        return done;\n      });\n\n      function nothingToInline() {\n        return !shouldProcess(string);\n      }\n    }\n  }\n\n  function newFontFaces() {\n    return {\n      resolveAll: resolveAll,\n      impl: {\n        readAll: readAll\n      }\n    };\n\n    function resolveAll() {\n      return readAll(document).then(function (webFonts) {\n        return Promise.all(webFonts.map(function (webFont) {\n          return webFont.resolve();\n        }));\n      }).then(function (cssStrings) {\n        return cssStrings.join('\\n');\n      });\n    }\n\n    function readAll() {\n      return Promise.resolve(util.asArray(document.styleSheets)).then(getCssRules).then(selectWebFontRules).then(function (rules) {\n        return rules.map(newWebFont);\n      });\n\n      function selectWebFontRules(cssRules) {\n        return cssRules.filter(function (rule) {\n          return rule.type === CSSRule.FONT_FACE_RULE;\n        }).filter(function (rule) {\n          return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n        });\n      }\n\n      function getCssRules(styleSheets) {\n        var cssRules = [];\n        styleSheets.forEach(function (sheet) {\n          try {\n            util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n          } catch (e) {\n            console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n          }\n        });\n        return cssRules;\n      }\n\n      function newWebFont(webFontRule) {\n        return {\n          resolve: function resolve() {\n            var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n            return inliner.inlineAll(webFontRule.cssText, baseUrl);\n          },\n          src: function () {\n            return webFontRule.style.getPropertyValue('src');\n          }\n        };\n      }\n    }\n  }\n\n  function newImages() {\n    return {\n      inlineAll: inlineAll,\n      impl: {\n        newImage: newImage\n      }\n    };\n\n    function newImage(element) {\n      return {\n        inline: inline\n      };\n\n      function inline(get) {\n        if (util.isDataUrl(element.src)) return Promise.resolve();\n        return Promise.resolve(element.src).then(get || util.getAndEncode).then(function (data) {\n          return util.dataAsUrl(data, util.mimeType(element.src));\n        }).then(function (dataUrl) {\n          return new Promise(function (resolve, reject) {\n            element.onload = resolve;\n            element.onerror = reject;\n            element.src = dataUrl;\n          });\n        });\n      }\n    }\n\n    function inlineAll(node) {\n      if (!(node instanceof Element)) return Promise.resolve(node);\n      return inlineBackground(node).then(function () {\n        if (node instanceof HTMLImageElement) return newImage(node).inline();else return Promise.all(util.asArray(node.childNodes).map(function (child) {\n          return inlineAll(child);\n        }));\n      });\n\n      function inlineBackground(node) {\n        var background = node.style.getPropertyValue('background');\n        if (!background) return Promise.resolve(node);\n        return inliner.inlineAll(background).then(function (inlined) {\n          node.style.setProperty('background', inlined, node.style.getPropertyPriority('background'));\n        }).then(function () {\n          return node;\n        });\n      }\n    }\n  }\n})(this);","map":{"version":3,"sources":["/Users/tashapais/Documents/Github/solana-games/node_modules/dom-to-image/src/dom-to-image.js"],"names":["global","util","newUtil","inliner","newInliner","fontFaces","newFontFaces","images","newImages","defaultOptions","imagePlaceholder","undefined","cacheBust","domtoimage","toSvg","toPng","toJpeg","toBlob","toPixelData","impl","options","module","exports","node","copyOptions","Promise","resolve","then","cloneNode","filter","embedFonts","inlineImages","applyOptions","clone","makeSvgDataUri","width","height","bgcolor","style","backgroundColor","Object","keys","forEach","property","draw","canvas","getContext","getImageData","data","toDataURL","quality","canvasToBlob","domNode","makeImage","delay","image","newCanvas","drawImage","document","createElement","ctx","fillStyle","fillRect","root","makeNodeCopy","cloneChildren","processClone","HTMLCanvasElement","original","children","childNodes","length","cloneChildrenInOrder","asArray","parent","done","child","childClone","appendChild","Element","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","copyStyle","window","getComputedStyle","source","target","cssText","copyProperties","name","setProperty","getPropertyValue","getPropertyPriority","element","clonePseudoElement","content","className","uid","styleElement","formatPseudoElementStyle","selector","formatCssText","formatCssProperties","createTextNode","map","formatProperty","join","HTMLTextAreaElement","innerHTML","value","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","resolveAll","styleNode","inlineAll","XMLSerializer","serializeToString","escapeXhtml","xhtml","foreignObject","svg","escape","parseExtension","mimeType","dataAsUrl","isDataUrl","resolveUrl","getAndEncode","mimes","WOFF","JPEG","url","match","exec","extension","toLowerCase","search","binaryString","atob","split","binaryArray","Uint8Array","i","charCodeAt","Blob","type","baseUrl","doc","implementation","createHTMLDocument","base","head","a","body","href","index","fourRandomChars","Math","random","pow","toString","slice","uri","reject","Image","onload","onerror","src","TIMEOUT","test","Date","getTime","request","XMLHttpRequest","onreadystatechange","ontimeout","timeout","responseType","open","send","placeholder","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","message","console","error","string","replace","ms","arg","setTimeout","arrayLike","array","push","leftBorder","px","rightBorder","scrollWidth","topBorder","bottomBorder","scrollHeight","styleProperty","parseFloat","URL_REGEX","shouldProcess","readUrls","inline","get","dataUrl","urlAsRegex","RegExp","nothingToInline","urls","readAll","webFonts","all","webFont","cssStrings","styleSheets","getCssRules","selectWebFontRules","rules","newWebFont","cssRules","rule","CSSRule","FONT_FACE_RULE","sheet","bind","e","log","webFontRule","parentStyleSheet","newImage","inlineBackground","HTMLImageElement","background","inlined"],"mappings":"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","sourcesContent":["(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n"]},"metadata":{},"sourceType":"script"}