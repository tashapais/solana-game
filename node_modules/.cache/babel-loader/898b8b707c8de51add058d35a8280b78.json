{"ast":null,"code":"var _jsxFileName = \"/Users/tashapais/Documents/Github/solana-games/src/games/stack_it/index.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/heading-has-content */\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport \"./styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StackIt = () => {\n  _s();\n\n  const [time, setTime] = useState(0);\n  var timing = React.useRef();\n  const history = useHistory();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (document.getElementById(\"lose-message\").style.display !== \"block\") {\n        setTime(time + 1);\n        timing.current.innerText = time + 1;\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [time]);\n  useEffect(() => {\n    const objLoader = document.createElement(\"script\");\n    objLoader.src = \"/lib/OBJLoader.js\";\n    objLoader.type = \"text/javascript\";\n    objLoader.async = true;\n    document.body.appendChild(objLoader);\n    const mtlLoader = document.createElement(\"script\");\n    mtlLoader.src = \"/lib/MTLLoader.js\";\n    mtlLoader.type = \"text/javascript\";\n    mtlLoader.async = true;\n    document.body.appendChild(mtlLoader);\n    const stats = document.createElement(\"script\");\n    stats.src = \"/lib/stats.js\";\n    stats.type = \"text/javascript\";\n    stats.async = true;\n    document.body.appendChild(stats);\n    const scene = document.createElement(\"script\");\n    scene.src = \"/stackScene.js\";\n    scene.async = true;\n    document.body.appendChild(scene);\n  }, []);\n\n  const withdrawEarnings = () => {\n    const score = document.getElementById(\"score\").textContent;\n    history.push(`/createNFT/${Number(score)}/${time}`); // alert(`Achieved ${Number(score)} points in ${time} seconds!`)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stackMain\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"warm\",\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Stats-output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"WebGL-output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"canvas-area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lose-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: \"30px\"\n          },\n          children: \"[Your Score]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"score\",\n          style: {\n            fontSize: \"30px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: \"30px\"\n          },\n          children: \"[Max Combo]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"maxCombo\",\n          style: {\n            fontSize: \"30px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: \"30px\"\n          },\n          children: \"[Time Spent]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: \"30px\"\n          },\n          ref: timing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"button-restart\",\n          onClick: () => setTime(0),\n          children: \"restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: withdrawEarnings,\n          children: \"Claim tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"- or press R to restart - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StackIt, \"Kk9E8PO66W2qpSv0HNhgXyzGoCE=\", false, function () {\n  return [useHistory];\n});\n\n_c = StackIt;\nexport default StackIt;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackIt\");","map":{"version":3,"sources":["/Users/tashapais/Documents/Github/solana-games/src/games/stack_it/index.jsx"],"names":["React","useEffect","useState","useHistory","StackIt","time","setTime","timing","useRef","history","interval","setInterval","document","getElementById","style","display","current","innerText","clearInterval","objLoader","createElement","src","type","async","body","appendChild","mtlLoader","stats","scene","withdrawEarnings","score","textContent","push","Number","fontSize"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/heading-has-content */\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport \"./styles.scss\";\nconst StackIt = () => {\n    const [time, setTime] = useState(0);\n    var timing = React.useRef();\n    const history = useHistory()\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (document.getElementById(\"lose-message\").style.display !== \"block\") {\n                setTime(time + 1);\n                timing.current.innerText = time + 1;\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [time]);\n\n    useEffect(() => {\n\n\n        const objLoader = document.createElement(\"script\");\n        objLoader.src = \"/lib/OBJLoader.js\";\n        objLoader.type = \"text/javascript\";\n        objLoader.async = true;\n        document.body.appendChild(objLoader);\n\n        const mtlLoader = document.createElement(\"script\");\n        mtlLoader.src = \"/lib/MTLLoader.js\";\n        mtlLoader.type = \"text/javascript\"\n        mtlLoader.async = true;\n        document.body.appendChild(mtlLoader);\n\n        const stats = document.createElement(\"script\");\n        stats.src = \"/lib/stats.js\";\n        stats.type = \"text/javascript\"\n        stats.async = true;\n        document.body.appendChild(stats);\n\n\n\n        const scene = document.createElement(\"script\");\n        scene.src = \"/stackScene.js\";\n        scene.async = true;\n        document.body.appendChild(scene);\n    }, []);\n    const withdrawEarnings = () => {\n        const score = document.getElementById(\"score\").textContent;\n        history.push(`/createNFT/${Number(score)}/${time}`)\n        // alert(`Achieved ${Number(score)} points in ${time} seconds!`)\n\n    }\n    return (\n        <div className=\"stackMain\">\n            <div id=\"warm\" className=\"overlay\"></div>\n            <div id=\"Stats-output\"></div>\n            <div id=\"WebGL-output\"></div>\n            <div id=\"canvas-area\"></div>\n            <div id=\"lose-message\">\n                <h1>Game Over</h1>\n                <div>\n                    <h2 style={{ fontSize: \"30px\" }}>[Your Score]</h2>\n\n                    <h2 id=\"score\" style={{ fontSize: \"30px\" }}></h2>\n                    <h2 style={{ fontSize: \"30px\" }}>[Max Combo]</h2>\n                    <h2 id=\"maxCombo\" style={{ fontSize: \"30px\" }}></h2>\n                    <h2 style={{ fontSize: \"30px\" }}>[Time Spent]</h2>\n                    <h2 style={{ fontSize: \"30px\" }} ref={timing}></h2>\n\n                </div>\n                <ul>\n\n                    <button id=\"button-restart\" onClick={() => setTime(0)}>restart</button>\n                    <button onClick={withdrawEarnings}>Claim tokens</button>\n                </ul>\n                <p>- or press R to restart - </p>\n            </div>\n\n        </div>\n    )\n}\nexport default StackIt;"]},"metadata":{},"sourceType":"module"}